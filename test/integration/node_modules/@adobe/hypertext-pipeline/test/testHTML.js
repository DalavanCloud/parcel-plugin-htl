/* global describe, it */
const assert = require("assert");

const params = {
  path: "/hello.md",
  __ow_method: "get",
  owner: "trieloff",
  __ow_headers: {
    "X-Forwarded-Port": "443",
    "X-CDN-Request-Id": "2a208a89-e071-44cf-aee9-220880da4c1e",
    "Fastly-Client": "1",
    "X-Forwarded-Host": "runtime.adobe.io",
    "Upgrade-Insecure-Requests": "1",
    Host: "controller-a",
    Connection: "close",
    "Fastly-SSL": "1",
    "X-Request-Id": "RUss5tPdgOfw74a68aNc24FeTipGpVfW",
    "X-Branch": "master",
    "Accept-Language": "en-US, en;q=0.9, de;q=0.8",
    "X-Forwarded-Proto": "https",
    "Fastly-Orig-Accept-Encoding": "gzip",
    "X-Varnish": "267021320",
    DNT: "1",
    "X-Forwarded-For":
      "192.147.117.11, 157.52.92.27, 23.235.46.33, 10.64.221.107",
    "X-Host": "www.primordialsoup.life",
    Accept:
      "text/html, application/xhtml+xml, application/xml;q=0.9, image/webp, image/apng, */*;q=0.8",
    "X-Real-IP": "10.64.221.107",
    "X-Forwarded-Server": "cache-lcy19249-LCY, cache-iad2127-IAD",
    "Fastly-Client-IP": "192.147.117.11",
    "Perf-Br-Req-In": "1529585370.116",
    "X-Timer": "S1529585370.068237,VS0,VS0",
    "Fastly-FF":
      "dc/x3e9z8KMmlHLQr8BEvVMmTcpl3y2YY5y6gjSJa3g=!LCY!cache-lcy19249-LCY, dc/x3e9z8KMmlHLQr8BEvVMmTcpl3y2YY5y6gjSJa3g=!LCY!cache-lcy19227-LCY, dc/x3e9z8KMmlHLQr8BEvVMmTcpl3y2YY5y6gjSJa3g=!IAD!cache-iad2127-IAD, dc/x3e9z8KMmlHLQr8BEvVMmTcpl3y2YY5y6gjSJa3g=!IAD!cache-iad2133-IAD",
    "Accept-Encoding": "gzip",
    "User-Agent":
      "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.87 Safari/537.36"
  },
  repo: "soupdemo",
  ref: "master",
  selector: "md",
  branch: "master"
};

const secrets = {
  REPO_RAW_ROOT: 'https://raw.githubusercontent.com/'
};

describe("Testing HTML Pipeline", () => {
  it("html.pipe is a function", () => {
    const { pipe } = require("../src/defaults/html.pipe.js");

    assert.ok(pipe);
    assert.strictEqual(typeof pipe, "function");
  });

  it("html.pipe makes HTTP requests", done => {
    const { pipe } = require("../src/defaults/html.pipe.js");
    const result = pipe(
      ({resource}) => {
        // this is the main function (normally it would be the template function)
        // but we use it to assert that pre-processing has happened
        assert.ok(resource.body);
        assert.ok(resource.mdast);
        assert.ok(resource.meta);
        assert.equal('Medium', resource.meta.template);
        // and return a different status code
        return { response: {status: 201 }};
      },
      params,
      secrets
    )(params);

    result.then(result => {
      assert.equal(201, result.statusCode);
      assert.equal('text/html', result.headers['Content-Type']);
      done();
    });
  });
});
