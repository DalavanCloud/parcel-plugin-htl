version: 2
jobs:

  build:
    docker:
      # specify the version you desire here
      # using the clojurescript image because it has node, java, antlr and the openwhisk tools
      - image: circleci/node:8
        environment:
            NPM_CONFIG_PREFIX: "~/.npm-global"

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v3-dependencies-{{ checksum "package.json" }}

      - run: 
          name: Install Dependencies
          command: npm install && npm install -D mocha-junit-reporter npm-snapshot

      - save_cache:
          paths:
            - node_modules
          key: v3-dependencies-{{ checksum "package.json" }}

      - run: mkdir -p ~/.npm-global

      - run: npm run lint


      # run tests!
      - run:
          name: Install Dependency
          command: npm install && npm link
          working_directory: hypermedia-pipeline

      - run: npm link @adobe/hypermedia-pipeline

      # run tests!
      - run:
          name: Running Tests
          command: npm install npm install -D mocha-junit-reporter && npm link @adobe/hypermedia-pipeline && mkdir junit && npx mocha test --reporter mocha-junit-reporter
          working_directory: test/integration
          environment:
            MOCHA_FILE: junit/test-results.xml
          when: always

      - store_test_results:
          path: test/integration/junit
      - store_artifacts:
          path: test/integration/junit 

  publish-snapshot:
    docker:
      # specify the version you desire here
      # using the clojurescript image because it has node, java, antlr and the openwhisk tools
      - image: circleci/node:8

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v3-dependencies-{{ checksum "package.json" }}

      - run: 
          name: Install Dependencies
          command: npm install && npm install -D mocha-junit-reporter npm-snapshot

      - save_cache:
          paths:
            - node_modules
          key: v3-dependencies-{{ checksum "package.json" }}

#      # run tests!
#      - run: mkdir junit
#      - run:
#          name: Running Tests
#          command: ./node_modules/.bin/mocha test --reporter mocha-junit-reporter
#          environment:
#            MOCHA_FILE: junit/test-results.xml
#          when: always

      - run: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> ~/.npmrc

      - run: 
          command: BUILD_TAG=$(./node_modules/.bin/npm-snapshot $CIRCLE_BUILD_NUM) echo 'export BUILD_TAG=$BUILD_TAG' >> $BASH_ENV

      - run: 
          name: Publish Snapshot
          command: npm publish --access public

      - store_test_results:
          path: junit
      - store_artifacts:
          path: junit 

workflows:
  version: 2
  build:
    jobs:
      - publish-snapshot:
           requires:
               - build
           filters:
              branches:
                only:
                  - master
      - build